// 将键绑定放入此文件中以覆盖默认值
[
    {
        "key":"ctrl+w",
        "command":"workbench.action.closeAcitveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "alt+k",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+j",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+oem_4",
        "command": "editor.fold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-editor.fold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+oem_4",
        "command": "editor.fold",
        "when": "editorFocus"
    },
    {
        "key": "unknown",
        "command": "-editor.fold",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+oem_6",
        "command": "editor.unfold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-editor.unfold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+oem_6",
        "command": "editor.unfold",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-editor.unfold",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k m",
        "command": "markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+l",
        "command": "cursorWordEndRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-cursorWordEndRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-cursorWordEndRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "cursorWordStartLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-cursorWordStartLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-cursorWordStartLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+f1",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+alt+r",
        "command": "code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "ctrl+k l",
        "command": "workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+k m",
        "command": "-workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+d",
        "command": "-list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl"
    },
    {
        "key": "ctrl+a",
        "command": "-extension.vim_ctrl+a",
        "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
    },
    {
        "key": "ctrl+c",
        "command": "-extension.vim_ctrl+c",
        "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
    },
    {
        "key": "ctrl+v",
        "command": "-extension.vim_ctrl+v",
        "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+h",
        "command": "-extension.vim_ctrl+h",
        "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "suggestWidgetVisible && vim.active && vim.use<C-p>"
    },
    {
        "key": "ctrl+o",
        "command": "-extension.vim_ctrl+o",
        "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
    }
]
